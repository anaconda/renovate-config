{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "docker:pinDigests",
    "group:monorepos",
    "group:recommended",
    "helpers:pinGitHubActionDigests",
    "workarounds:typesNodeVersioning",
    "workarounds:supportRedHatImageVersion",
    "regexManagers:dockerfileVersions",
    "regexManagers:githubActionsVersions"
  ],
  "dependencyDashboard": true,
  "description": [
    "Use the Anaconda Best Practice configuration from [anaconda/renovate-config](https://github.com/anaconda/renovate-config)",
    "Create a Dependency Dashboard as Issue, listing all upgrades",
    "Open new PRs automatically every weekday before 6am UTC. You can manually trigger PRs from the Dependency Dashboard, those will be opened once renovate runs again (once every hour)",
    "Label all PRs with `renovate`",
    "Use semantic commit messages for all upgrades",
    "Open a maximum of 10 PRs concurrently",
    "Automatically set reviewers from CODEOWNERS",
    "Upgrade arbitrary dependencies in Dockerfiles when you mark them, [see the documentation for details](https://github.com/anaconda/renovate-config/blob/main/docs/Dockerfile.md)"
  ],
  "packageRules": [
    {
      "matchManagers": ["regex"],
      "commitMessageTopic": "{{datasource}} dependency {{depName}}"
    },
    {
      "description": "Widen ranges for terraform required_providers instead of replacing/bumping them. This preserves the minimum version",
      "matchManagers": ["terraform"],
      "matchDepTypes": ["required_provider"],
      "rangeStrategy": "widen"
    }
  ],
  "pre-commit": {
    "enabled": true
  },
  "labels": [
    "renovate"
  ],
  "postUpdateOptions": [
    "gomodUpdateImportPaths",
    "gomodTidy"
  ],
  "prConcurrentLimit": 10,
  "prHourlyLimit": 0,
  "rangeStrategy": "auto",
  "reviewersFromCodeOwners": true,
  "gitIgnoredAuthors": [
    "anaconda-renovate[bot]@users.noreply.github.com",
    "anaconda-renovate-bot@anaconda.com",
    "devops+anaconda-bot@anaconda.com"
  ],
  "regexManagers": [
    {
      "description": "Upgrade go version in a GitHub workflow",
      "fileMatch": ["(^workflow-templates|\\.github/workflows)/[^/]+\\.ya?ml$"],
      "matchStrings": [
        "go-version:\\s(?<currentValue>.*)"
      ],
      "datasourceTemplate": "golang-version",
      "depNameTemplate": "go"
    },
    {
      "description": "Upgrade conda dependencies",
      "fileMatch": ["(^|/)environment(.*).ya?ml$"],
      "matchStrings": [
        "#\\s*renovate\\s+datasource=conda\\s+depName=(?<depName>.*?)\\s+-\\s*[\\w-]+\\s*==?\\s*\"?(?<currentValue>.*)\"?",
        "# renovate: datasource=conda depName=(?<depName>.*?)\\s+-\\s*[\\w-]+\\s*==?\\s*\"?(?<currentValue>.*)\"?"
      ],
      "datasourceTemplate": "conda"
    },
    {
      "description": "Upgrade pypi dependencies inside conda environment files",
      "fileMatch": ["(^|/)environment(.*).ya?ml$"],
      "matchStrings": [
        "# renovate datasource=pypi\\s+-\\s*(?<depName>[\\w-]+)\\s*(\\[[\\w,\\s]+\\])?\\s*==?\\s*(?<currentValue>.*)",
        "# renovate: datasource=pypi\\s+-\\s*(?<depName>[\\w-]+)\\s*(\\[[\\w,\\s]+\\])?\\s*==?\\s*(?<currentValue>.*)",
        "# renovate: datasource=pypi\\s+registryUrl=(?<registryUrl>.*?)\\s+-\\s*(?<depName>[\\w-]+)\\s*(\\[[\\w,\\s]+\\])?\\s*==?\\s*(?<currentValue>.*)"
      ],
      "datasourceTemplate": "pypi"
    },
    {
      "description": "Upgrade arbitrary go module versions in Makefiles",
      "fileMatch": ["^Makefile"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s.*@(?<currentValue>.*)"
      ]
    },
    {
      "description": "Pin Serverless to less than 4.x because of license changes.",
      "matchDepNames": ["serverless"],
      "allowedVersions": "< 4.0"
    }
  ],
  "schedule": [
    "every weekday"
  ],
  "semanticCommits": "enabled",
  "timezone": "UTC"
}
